#!/usr/bin/env luajit

local help = [[
Usage: gfx [options] image-filename1 [image-filename2] [image-filename3]
Options:
  -collage : instead of displaying the list of images in separate windows, loads them as a collage in the same window
  -clearcache : clears all the cached dom elements in ~/.gfx.js/static/data
  -redraw [count]: redraw the last [count] windows
  -start : start server
  -stop : stop server
Example:
gfx a.jpg

gfx *.jpg
]]

local gfx = require 'gfx.js'

local list = {}
local collage = false
local redraw = false
local redraw_num = 1
for k,v in ipairs(arg) do
    if v == '-collage' then
       collage = true
    elseif v == '-clearcache' then
       os.execute('rm -rf ' .. os.getenv('HOME') .. '/.gfx.js/static/data/*')
       os.exit(1)
    elseif v == '-start' then
       require 'gfx.start'
    elseif v == '-stop' then
       require 'gfx.stop'
    elseif v == '-redraw' then
          redraw = true;
          redraw_num = arg[k+1]
	   break;
    else
	table.insert(list, v)
    end
end

local gm = require 'graphicsmagick'

if redraw then
   print('redrawing last ' .. redraw_num .. ' windows')
   gfx.redraw(redraw_num)
   os.exit(1)
end

if #list < 1 then
   print(help)
   os.exit(1)
end



for i=1,#list do
    local path = list[i]
    local img = gm.Image()
    img = img:load(path):toTensor('float', 'RGB', 'DHW')
    list[i] = img
end

if collage then
   gfx.image(list)
else
   for i=1,#list do
       gfx.image(list[i])
   end
end

